---
- name: Set timezone to {{ timezone }}
  community.general.timezone:
    name: "{{ timezone }}"

- name: Install chrony
  yum:
    name: chrony

- name: Enable chrony service
  systemd:
    name: chronyd
    enabled: true

- name: Check if cloud-init has configured system
  stat:
    path: /etc/cloud/cloud.cfg
  register: cloud_init_configured

- block:
    - name: change hostname
      hostname:
        name: "{{ hostname }}"

    - name: Install python3-libselinux
      yum:
        name: python3-libselinux
      when: ansible_distribution_major_version == '8'

    - name: Install libselinux-python
      yum:
        name: libselinux-python
      when: ansible_distribution_major_version == '7'

    - name: add hostname to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.0\.1[ \t]+localhost'
        line: '127.0.0.1 localhost {{ hostname }}'
        state: present
  when: not cloud_init_configured.stat.exists and (ansible_facts.virtualization_type not in ('docker', 'lxc', 'container', 'VirtualPC', 'containerd'))

- block:
    - name: Check SELinux status
      command: getenforce
      register: sestatus
      changed_when: false

    - name: Enable SELinux
      selinux:
        policy: targeted
        state: enforcing
      when: '"Disabled" in sestatus.stdout'

    - name: Relabel SELinux contexts on reboot
      file:
        dest: /.autorelabel
        state: touch
        mode: 0644
      when: '"Disabled" in sestatus.stdout'

    - name: Reboot and wait for server to come up
      reboot:
        reboot_timeout: 600
      when: '"Disabled" in sestatus.stdout'
  when: ansible_facts.virtualization_type not in ('docker', 'lxc', 'container', 'VirtualPC', 'containerd')

- name: Update every package
  yum:
    name: '*'
    state: latest

- name: Removing CentOS 8 unneccessary packages
  yum:
    name: "{{ centos8_unnecessary_packages }}"
    state: absent
    autoremove: true
  when: ansible_distribution_major_version == '8'

- name: Removing CentOS 7 unneccessary packages
  yum:
    name: "{{ centos7_unnecessary_packages }}"
    state: absent
    autoremove: true
  when: ansible_distribution_major_version == '7'

- name: Check if kernel has been updated
  shell: if [ $(rpm -q kernel|tail -n 1) != kernel-$(uname -r) ]; then echo 'reboot'; else echo 'no'; fi
  register: kernel_update
  changed_when: false

- name: Reboot to match new kernel
  reboot:
    reboot_timeout: 600
  when: kernel_update.stdout.find("reboot") != -1

- name: Autoremove unneeded packages installed as dependencies
  yum:
    autoremove: true

- name: Stop and disable unnecessary services
  systemd:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop: "{{ unnecessary_services | default([], true) }}"

- block:
    - name: Install python3-libselinux
      yum:
        name: python3-libselinux
      when: ansible_distribution_major_version == '8'

    - name: Install libselinux-python
      yum:
        name: libselinux-python
      when: ansible_distribution_major_version == '7'
  when: ansible_facts.virtualization_type not in ('docker', 'lxc', 'container', 'VirtualPC', 'containerd')

- name: Make sure procps-ng is present
  yum:
    name: procps-ng

- name: Set vm.swappiness to 1 percent
  sysctl:
    name: vm.swappiness
    value: "1"
    state: present

- name: Increase local port range
  sysctl:
    name: net.ipv4.ip_local_port_range
    value: "1025 65535"
    state: present
